# 딕셔너리 쌍 추가

a = {1: 'a'}
a[2] = 'b'
print(a) # {1: 'a', 2: 'b'}

# {1: 'a'} 딕셔너리에 a[2] = 'b'와 같이 입력하면 딕셔너리 a에 Key와 Value가 각각 2와 'b'인 {2: 'b'} 딕셔너리 쌍이 추가된다.

# 딕셔너리 요소 삭제
del a[1]
print(a) # {2: 'b', 'name': 'pey', 3: [1, 2, 3]}
# del 함수를 사용해서 del a[key]를 입력하면 지정한 Key에 해당하는 {Key: Value} 쌍이 삭제된다.


# 딕셔너리에서 Key를 사용해 Value 얻기
grade = {'pey': 10, 'julliet': 99}
grade['pey'] # 10
grade['julliet'] # 99
# 리스트, 튜플, 문자열은 요솟값을 얻고자 할 때 인덱싱이나 슬라이싱 기법 중 하나를 사용했다.
# 딕셔너리의 경우 Key를 사용해서 Value를 구한다. 어떤 Key의 Value를 얻기 위해서는 '딕셔너리_변수_이름[Key]'를 사용해야 한다.


# 딕셔너리는
# 딕셔너리에서 Key는 고유한 값이므로 중복되는 Key 값을 설정해 놓으면 하나를 제외한 나머지 것들이 모두 무시된다.

>>> a = {1:'a', 1:'b'}
>>> a
{1: 'b'}
# 이렇게 Key가 중복되었을 때 1개를 제외한 나머지 Key: Value 값이 모두 무시되는 이유는 Key를 통해서 Value를 얻는 딕셔너리의 특징 때문이다. 즉, 딕셔너리에는 동일한 Key가 중복으로 존재할 수 없다.